<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="com.tianze">
        <!--不扫描Conroller的注解-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
         <property name="locations" value="classpath:*.properties"/>
     </bean>
     <bean id="configProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
         <property name="locations" value="classpath:*.properties">
         </property>
     </bean>
     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
         <property name="properties" ref="configProperties" />
     </bean>
     -->

    <context:property-placeholder location="classpath:*.properties"/>

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
          destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="driverClass" value="${bonecp.driverClass}"/>
        <!-- 相应驱动的jdbcUrl -->
        <property name="jdbcUrl" value="${bonecp.jdbcUrl}"/>
        <!-- 数据库的用户名 -->
        <property name="username" value="${bonecp.username}"/>
        <!-- 数据库的密码 -->
        <property name="password" value="${bonecp.password}"/>
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
        <property name="idleConnectionTestPeriodInMinutes" value="${bonecp.idleConnectionTestPeriod}"/>
        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
        <property name="idleMaxAgeInMinutes" value="${bonecp.idleMaxAge}"/>
        <!-- 每个分区最大的连接数 -->
        <property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}"/>
        <!-- 每个分区最小的连接数 -->
        <property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}"/>
        <!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定-->
        <property name="partitionCount" value="${bonecp.partitionCount}"/>
        <!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
        <property name="acquireIncrement" value="${bonecp.acquireIncrement}"/>
        <!-- 缓存prepared statements的大小，默认值：0 -->
        <property name="statementsCacheSize" value="${bonecp.statementsCacheSize}"/>
        <!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->
        <!-- <property name="releaseHelperThreads" value="${bonecp.releaseHelperThreads}"/>-->

        <property name="poolAvailabilityThreshold" value="${bonecp.poolAvailabilityThreshold}"/>
        <property name="connectionTimeoutInMs" value="${bonecp.connectionTimeoutInMs}"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>


    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg>
            <ref bean="dataSource"/>
        </constructor-arg>
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg index="0" ref="jdbcTemplate"></constructor-arg>
    </bean>

    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

    <bean id="sqlXmlCache" class="com.tianze.other.SqlXmlCache" init-method="Init"/>

    <bean id="commonConfig" class="java.util.concurrent.ConcurrentHashMap">
        <constructor-arg>
            <map>
                <entry key="thriftPort">
                    <value type="int">${thrift.port}</value>
                </entry>
                <entry key="thriftIp">
                    <value type="java.lang.String">${thrift.ip}</value>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <bean class="com.tianze.client.MonitorClient" init-method="init"/>
</beans>